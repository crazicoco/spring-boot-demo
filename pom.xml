<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.demo.springboot</groupId>
	<artifactId>spring_boot_demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>spring_boot_demo</name>
	<description>spirngboot demo ，contains：redis、mysql 多数据源、mybatis、junit、 </description>

	<!--Inherit defaults from Spring Boot -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<!-- <version>1.5.9.RELEASE</version> -->
		<!-- 使用较新的 spring boot 版本 -->
		<!-- 区别： 基于Spring5和JDK8、而Spring 1x则用的是降低版本、JPA中，findById 返回了一个Optional对象，改动较大，会直接影响所有业务代码。 -->
		<version>2.1.3.RELEASE</version>
	</parent>
	<dependencies>
		<!-- spring-boot-starter：核心模块，包括自动配置支持、日志和YAML -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<!-- spring boot web 依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- spring-boot-starter-test：测试模块，包括JUnit、Mockito。 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- 
			报错： Compilation failure: Compilation failure: 程序包org.junit不存在
			因为spring boot 2.x 之后，junit 使用的是 junit5 的版本，
			这么写已经不行了：<dependency><groupId>junit</groupId><artifactId>junit</artifactId><version>4.12</version><scope>test</scope> </dependency>
			需要定制junit。
		 -->
		<dependency>
	        <groupId>org.springframework</groupId>
	        <artifactId>spring-test</artifactId>
	        <version>4.3.18.RELEASE</version>
	        <scope>test</scope>
	    </dependency>
		<!-- 热部署插件 -->
		<!-- <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency> -->
	</dependencies>

	<!-- maven build 配置 -->
	<build>
		<!-- -->
		<finalName>scrm</finalName>
		<plugins>
			<!-- spring boot 可用的 maven 打包插件 -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<!-- 热部署 devtools 启动 -->
				<!-- <configuration>
					<fork>true</fork>
				</configuration> -->
			</plugin>
		</plugins>
	</build>
</project>